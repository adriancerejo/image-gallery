{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Adrian\\\\Desktop\\\\react project\\\\gallery\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Adrian\\\\Desktop\\\\react project\\\\gallery\\\\src\\\\App.js\";\nimport React, { useEffect, useState } from 'react';\nimport Picture from './Picture';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport './App.css';\n\nconst App = () => {\n  const client_id = `cdf04b05665f0efd4eb7272c93633384cae55bb23a0833102eee61692ebda4fd`;\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        images = _useState2[0],\n        setImages = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        search = _useState4[0],\n        setSearch = _useState4[1];\n\n  const _useState5 = useState('mountains'),\n        _useState6 = _slicedToArray(_useState5, 2),\n        query = _useState6[0],\n        setQuery = _useState6[1];\n\n  useEffect(() => {\n    getImages();\n  }, [query]);\n\n  const updateSearch = e => {\n    setSearch(e.target.value);\n  };\n\n  const getSearch = e => {\n    e.preventDefault();\n    setQuery(search);\n    setSearch(\"\");\n  };\n\n  const getImages = async () => {\n    const response = await fetch(`https://api.unsplash.com/search/photos/?client_id=${client_id}&query=${query}&per_page=30`);\n    const data = await response.json();\n    setImages(data.results);\n    console.log(data.results);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: getSearch,\n    className: \"search-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: \"search-bar\",\n    type: \"text\",\n    value: search,\n    onChange: updateSearch,\n    placeholder: \"Search for Images\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: \"search-button\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Search\")), images.map(image => React.createElement(Picture, {\n    key: image.id,\n    source: image.links.download,\n    firstName: image.user.first_name,\n    lastName: image.user.last_name,\n    likes: image.likes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Adrian/Desktop/react project/gallery/src/App.js"],"names":["React","useEffect","useState","Picture","Button","TextField","App","client_id","images","setImages","search","setSearch","query","setQuery","getImages","updateSearch","e","target","value","getSearch","preventDefault","response","fetch","data","json","results","console","log","map","image","id","links","download","user","first_name","last_name","likes"],"mappings":";;AAAA,OAAOA,KAAP,IAAiBC,SAAjB,EAA4BC,QAA5B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAO,WAAP;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAEhB,QAAMC,SAAS,GAAE,kEAAjB;;AAFgB,oBAIYL,QAAQ,CAAC,EAAD,CAJpB;AAAA;AAAA,QAITM,MAJS;AAAA,QAIDC,SAJC;;AAAA,qBAKYP,QAAQ,CAAC,EAAD,CALpB;AAAA;AAAA,QAKTQ,MALS;AAAA,QAKDC,SALC;;AAAA,qBAMUT,QAAQ,CAAC,WAAD,CANlB;AAAA;AAAA,QAMTU,KANS;AAAA,QAMFC,QANE;;AAQhBZ,EAAAA,SAAS,CAAC,MAAK;AACba,IAAAA,SAAS;AACV,GAFQ,EAEN,CAACF,KAAD,CAFM,CAAT;;AAIA,QAAMG,YAAY,GAAGC,CAAC,IAAI;AACxBL,IAAAA,SAAS,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACD,GAFD;;AAIA,QAAMC,SAAS,GAAGH,CAAC,IAAI;AACrBA,IAAAA,CAAC,CAACI,cAAF;AACAP,IAAAA,QAAQ,CAACH,MAAD,CAAR;AACAC,IAAAA,SAAS,CAAC,EAAD,CAAT;AACD,GAJD;;AAMA,QAAMG,SAAS,GAAG,YAAY;AAC5B,UAAMO,QAAQ,GAAG,MAAMC,KAAK,CACzB,qDAAoDf,SAAU,UAASK,KAAM,cADpD,CAA5B;AAGA,UAAMW,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAf,IAAAA,SAAS,CAACc,IAAI,CAACE,OAAN,CAAT;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACE,OAAjB;AACH,GAPC;;AAUA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,QAAQ,EAAEN,SAAhB;AAA2B,IAAA,SAAS,EAAC,aAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,YAArB;AAAkC,IAAA,IAAI,EAAC,MAAvC;AAA8C,IAAA,KAAK,EAAET,MAArD;AAA6D,IAAA,QAAQ,EAAEK,YAAvE;AAAqF,IAAA,WAAW,EAAC,mBAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,SAAlC;AAA4C,IAAA,SAAS,EAAC,eAAtD;AAAsE,IAAA,IAAI,EAAC,QAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CADF,EAMOP,MAAM,CAACoB,GAAP,CAAWC,KAAK,IACf,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,KAAK,CAACC,EAApB;AAAwB,IAAA,MAAM,EAAED,KAAK,CAACE,KAAN,CAAYC,QAA5C;AAAsD,IAAA,SAAS,EAAEH,KAAK,CAACI,IAAN,CAAWC,UAA5E;AAAwF,IAAA,QAAQ,EAAEL,KAAK,CAACI,IAAN,CAAWE,SAA7G;AAAwH,IAAA,KAAK,EAAEN,KAAK,CAACO,KAArI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CANP,CADF;AAaD,CA7CD;;AA+CA,eAAe9B,GAAf","sourcesContent":["import React , { useEffect, useState }from 'react';\nimport Picture from './Picture';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport './App.css';\n\n\nconst App = () => {\n  \n  const client_id=`cdf04b05665f0efd4eb7272c93633384cae55bb23a0833102eee61692ebda4fd`;\n\n  const [images, setImages] = useState([]);\n  const [search, setSearch] = useState('');\n  const [query, setQuery] = useState('mountains');\n  \n  useEffect(() =>{\n    getImages();\n  }, [query]);\n\n  const updateSearch = e => {\n    setSearch(e.target.value);\n  }\n\n  const getSearch = e => {\n    e.preventDefault();\n    setQuery(search);\n    setSearch(\"\")\n  }\n\n  const getImages = async () => {\n    const response = await fetch (\n      `https://api.unsplash.com/search/photos/?client_id=${client_id}&query=${query}&per_page=30`\n    );\n    const data = await response.json();\n    setImages(data.results);\n    console.log(data.results);\n}\n\n \n  return (\n    <div className=\"App\">  \n      <form onSubmit={getSearch} className=\"search-form\">\n        <TextField className=\"search-bar\" type=\"text\" value={search} onChange={updateSearch} placeholder=\"Search for Images\"/>\n        <Button variant='contained' color='primary' className='search-button' type=\"submit\">Search</Button>\n      </form>\n\n          {images.map(image => (\n            <Picture key={image.id} source={image.links.download} firstName={image.user.first_name} lastName={image.user.last_name} likes={image.likes}/>\n          ) \n          )}    \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}